import React, { useState, useEffect } from "react";

const API = import.meta.env.VITE_API_URL || "http://localhost:8787";

export default function MarketplacePage({ user, products }) {
  const [myProducts, setMyProducts] = useState([]);
  const [newProduct, setNewProduct] = useState({ name: "", description: "", price: "", quantity: "" });

  useEffect(() => {
    if (user?.is_kyc_verified) {
      fetch(`${API}/api/my-products?user_id=${user.id}`)
        .then((res) => res.json())
        .then(setMyProducts)
        .catch(() => {});
    }
  }, [user]);

  const addProduct = async () => {
    if (!user.is_kyc_verified) return alert("Only verified users can list products!");
    const res = await fetch(`${API}/api/products`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ ...newProduct, user_id: user.id }),
    });
    const data = await res.json();
    if (data.success) {
      alert("Product added!");
      setNewProduct({ name: "", description: "", price: "", quantity: "" });
      setMyProducts([...myProducts, data.product]);
    }
  };

  const buyProduct = async (productId) => {
    const quantity = prompt("Enter quantity to buy:");
    if (!quantity) return;
    const res = await fetch(`${API}/api/orders`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ buyer_id: user.id, product_id: productId, quantity }),
    });
    const data = await res.json();
    if (data.success) alert("Order created! Escrow pending payment.");
  };

  return (
    <div>
      <h2 className="text-xl font-bold mb-4">ðŸŒ¾ Marketplace</h2>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        {products.map((p) => (
          <div key={p.id} className="bg-white shadow rounded-lg p-4">
            <h3 className="font-bold">{p.name}</h3>
            <p>{p.description}</p>
            <p className="text-green-700 font-semibold">${p.price}</p>
            <p>Qty: {p.quantity}</p>
            {user.id !== p.user_id && (
              <button
                onClick={() => buyProduct(p.id)}
                className="mt-2 bg-green-600 text-white px-3 py-1 rounded"
              >
                Buy
              </button>
            )}
          </div>
        ))}
      </div>

      {user.is_kyc_verified && (
        <div className="mt-8 bg-white p-4 rounded shadow-md">
          <h3 className="font-semibold mb-2">Add Product</h3>
          <input
            type="text"
            placeholder="Name"
            className="border p-2 w-full mb-2"
            value={newProduct.name}
            onChange={(e) => setNewProduct({ ...newProduct, name: e.target.value })}
          />
          <textarea
            placeholder="Description"
            className="border p-2 w-full mb-2"
            value={newProduct.description}
            onChange={(e) => setNewProduct({ ...newProduct, description: e.target.value })}
          />
          <input
            type="number"
            placeholder="Price"
            className="border p-2 w-full mb-2"
            value={newProduct.price}
            onChange={(e) => setNewProduct({ ...newProduct, price: e.target.value })}
          />
          <input
            type="number"
            placeholder="Quantity"
            className="border p-2 w-full mb-2"
            value={newProduct.quantity}
            onChange={(e) => setNewProduct({ ...newProduct, quantity: e.target.value })}
          />
          <button onClick={addProduct} className="bg-green-700 text-white px-4 py-2 rounded">
            Add Product
          </button>
        </div>
      )}
    </div>
  );
}